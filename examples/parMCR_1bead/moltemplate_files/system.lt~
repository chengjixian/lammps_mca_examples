import "ParM.lt"

# Create 1000 free copies of ATP-bound ParM (dimers)
m = new TF [8].move(24.0,  0.0,  0.0)
           [4].move(0.0,  24.0,  0.0)
           [4].move(0.0,   0.0, 24.0)

m[*][*][*].move(-84, -36, -36)

write_once("Data Boundary") {
  -96  96  xlo xhi
  -48  48  ylo yhi
  -48  48  zlo zhi
}


write_once("In Settings") { #style   K     r0
  bond_coeff  @bond:F    harmonic 100.0    7.0 #"filament"
  angle_coeff @angle:S   harmonic 851.66 180.0 #"filament" persistence=10um
}

# The persistence length, (P), of ParM filaments is approximately 10um according
# to Gerdes++Jensen_MolMicrobiol2000 and Choi++Garner++DycheMullins_JBC2008.
# The bending harmonic constant k_a = (P/b)*kB*T ~= 851.66,
# where kB*T = 0.001987207*300kCal/mole
#   and Uangle(theta) = K*(theta-theta0)^2, and K = k_a/2
# and "b" is the size of each "monomer" (7nm in this particular model)


write_once("system.in.transitions") {

  # Transition 1: Create a polymer (a dimer)
  fix tr1  all  bond/new     100       &
    @atom:TF  @atom:TF  7.1  @bond:F  prob 0.015 12345 &
    inew @atom:TE jnew @atom:TE   delay 1

  # NOTE: I intend to change the syntax of this command to the following
  #       so that it closely mimics the syntax of the fix bond/change command:
  #
  #fix tr1  all  bond/new     100   delay 1      &
  #    atoms @atom:TF  @atom:TF and
  #    distance <= 7.1  and prob 0.008 seed 12345 &
  # -> atoms @atom:TE  @atom:TE and bond @bond:F

  # Transition 2: Destabilize dimers (only trimers are stable)
  fix tr2  all  bond/change     100   delay 2     &
     atoms @atom:TE  @atom:TE and prob 0.85 seed 12345 &
  -> atoms @atom:TF  @atom:TF and bond BREAK

  # Transition 3: Attach monomers to the end of a polymer:
  fix tr3  all  bond/new     100       &
    @atom:TE  @atom:TF  7.1  @bond:F  atype @angle:S prob 0.25 123 &
    inew @atom:TB jnew @atom:TE    delay 3

  # NOTE: I intend to change the syntax of this command to the following:
  #       so that it closely mimics the syntax of the fix bond/change command
  #fix tr3  all  bond/new     100   delay 3                  &
  #   atoms @atom:TE @atom:TF and distance <= 7.1 and prob 0.25 &
  #-> atoms @atom:TB @atom:TE and bond @bond:F and angle @angle:S * * *

  # Transitions 4 and 5: Hydrolize ATP  (ATP -> ADP)
  #  Here I am using fix "bond/change" to modify only one atom at a time.
  #  (In the future, I'll create a new fix with this functionality and
  #   name it "atom/change" instead of "bond/change")
  fix tr4  all  bond/change     100   delay 4         &
      atom @atom:TB and prob 0.00035 seed 1234 -> atom @atom:DB 
  
  fix tr5  all  bond/change     100   delay 5         &
      atom @atom:TE and prob 0.00035 seed 12345 -> atom @atom:DE

  # Transitions 6-8: Depolymerize ADP-bound ParM at the end
  fix tr6  all  bond/change     100   delay 6         &
      atoms @atom:DB @atom:DE &
   -> atoms @atom:DE @atom:DF  and  bond BREAK

  fix tr7  all  bond/change     100   delay 7         &
      atoms @atom:DE @atom:DE &
   -> atoms @atom:DF @atom:DF  and  bond BREAK

  # NOTE: WE DONT REALLY NEED THE NEXT 2 RULES ("tr8" and "tr9")
  fix tr8  all  bond/change     100   delay 8         &
      atoms @atom:TB @atom:DE &
   -> atoms @atom:TE @atom:DF  and  bond BREAK
  
  fix tr9  all  bond/change     100   delay 9         &
     atoms @atom:TE  @atom:DE and prob 0.8 seed 12345  &
  -> atoms @atom:TF  @atom:DF and bond BREAK
  
  # Transition 10: Recycle ATP -> ADP (bound to ParM)
  #  Here I am using fix bond/change to modify only one atom at a time.
  #  (In the future, I'll create a new fix with this functionality and
  #   name it "atom/change" instead of "bond/change")
  fix tr10 all  "bond/change"     100   delay 10        &
      atom @atom:DF and prob 0.00005 -> atom @atom:TF  
}


# LAMMPS supports a large number of force-field styles. We must select
# which ones we need. This information belongs in the "In Init" section (and
# (you can specify it anywhere in your LT files, multiple times if you like).
# If different molecules use different force-field styles, you can use hybrid
# styles.  (In this example the molecules share the same pair_style.)

write_once("In Init") {
  units           lj
  atom_style      molecular
  pair_style      hybrid lj/cut 10.0
  bond_style      hybrid harmonic
  angle_style     hybrid harmonic
  pair_modify     mix arithmetic
  special_bonds   lj 1.0 1.0 1.0 # extra 100
}












# DEBRIS LEFT OVER FROM EARLIER VERSIONS.  IGNORE THIS:
# For a more realistic concentration and cell size estimate, use:
# Create ~9000 free copies of ATP-bound ParM (dimers)
#m = new TF [40].move(60.0,    0,    0)
#           [15].move(   0, 60.0,    0)
#           [15].move(   0,    0, 60.0)
#write_once("Data Boundary") {
#   -1200.0  1200.0  xlo xhi  #=volume of an E.coli cell
#    -450.0   450.0  ylo yhi
#    -450.0   450.0  zlo zhi
#}
#
#write_once("In Settings") {
#  bond_coeff @bond:BREAK harmonic 0.0 0.0
#}
#
# put this information in the read_data command instead
#write_once("Data Header") {
#  10 extra bond per atom
#  20 extra angle per atom
#}
#
  #fix a2 all change/nearby 1        &
  #    atoms @atom:TF  @atom:TE1   and distance <= 7.1 &
  # -> atoms @atom:MatpC1 @atom:TE1C
  #
  #fix a3a all change/bond 1        &
  #    atoms @atom:TE1  @atom:TE1C and bond @bond:T &
  # -> atoms @atom:TE1C @atom:TE1
  #
  #fix a4a all change/nearby 1        &
  #    atoms @atom:MatpC1 @atom:TE1C  and  distance <= 14.4 &
  # -> atoms @atom:MatpC2 @atom:TE1
  #
  #fix a3b all change/bond 1        &
  #    atoms @atom:TE2  @atom:TE1C and bond @bond:T &
  # -> atoms @atom:TE2C @atom:TE1C
  #
  #fix a4b all change/nearby 1        &
  #    atoms @atom:MatpC1 @atom:TE2C  and  distance <= 15.0 &
  # -> atoms @atom:MatpC2 @atom:Matp
  #
  #fix a5 all change/atom 1
  #    atom @{atom:MatpC1}*@{atom:MatpC2} -> atom @atom:TF
  #
  #fix a6a all change/bond 1  &
  # if atom @atom:Matp and prob 0.0014 seed 1234 &
  # -> atom @atom:Madp
  #
  #fix a6b all change/bond 1  &
  # if atom @{atom:TE2} and prob 0.0014 seed 1234 &
  # -> atom @atom:Madp
  #
  #fix a7 all change/bond 1  &
  # if atom @atom:TE1 and prob 0.0014 seed 1234 &
  # -> atom @atom:DE
  #
  #fix a8 all bond/change 1  &
  # if atoms @atom:DE @atom:Madp   &
  # -> atoms @atom:DF @atom:DE  and  bond BREAK
  #
  #fix a9 all bond/change 1 &
  # atom @atom:DF and prob 0.01 -> atom @atom:TF  

  ##fix a10 all bond/break 1 @bond:BREAK 0.0 prob 1.0 12345
